#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wypozyczalnia
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test2")]
	public partial class WypozyczalniaDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCzęść(Część instance);
    partial void UpdateCzęść(Część instance);
    partial void DeleteCzęść(Część instance);
    partial void InsertFunkcja(Funkcja instance);
    partial void UpdateFunkcja(Funkcja instance);
    partial void DeleteFunkcja(Funkcja instance);
    partial void Insertjest_serwisowany(jest_serwisowany instance);
    partial void Updatejest_serwisowany(jest_serwisowany instance);
    partial void Deletejest_serwisowany(jest_serwisowany instance);
    partial void InsertKlient(Klient instance);
    partial void UpdateKlient(Klient instance);
    partial void DeleteKlient(Klient instance);
    partial void Insertpilotuje(pilotuje instance);
    partial void Updatepilotuje(pilotuje instance);
    partial void Deletepilotuje(pilotuje instance);
    partial void InsertPracownik(Pracownik instance);
    partial void UpdatePracownik(Pracownik instance);
    partial void DeletePracownik(Pracownik instance);
    partial void InsertRezerwacja(Rezerwacja instance);
    partial void UpdateRezerwacja(Rezerwacja instance);
    partial void DeleteRezerwacja(Rezerwacja instance);
    partial void InsertStatek(Statek instance);
    partial void UpdateStatek(Statek instance);
    partial void DeleteStatek(Statek instance);
    partial void InsertStatus_części(Status_części instance);
    partial void UpdateStatus_części(Status_części instance);
    partial void DeleteStatus_części(Status_części instance);
    partial void InsertTyp_statku(Typ_statku instance);
    partial void UpdateTyp_statku(Typ_statku instance);
    partial void DeleteTyp_statku(Typ_statku instance);
    partial void InsertZamówienie(Zamówienie instance);
    partial void UpdateZamówienie(Zamówienie instance);
    partial void DeleteZamówienie(Zamówienie instance);
    #endregion
		
		public WypozyczalniaDataClassesDataContext() : 
				base(global::Wypozyczalnia.Properties.Settings.Default.Test2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WypozyczalniaDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WypozyczalniaDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WypozyczalniaDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WypozyczalniaDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Część> Częśćs
		{
			get
			{
				return this.GetTable<Część>();
			}
		}
		
		public System.Data.Linq.Table<Funkcja> Funkcjas
		{
			get
			{
				return this.GetTable<Funkcja>();
			}
		}
		
		public System.Data.Linq.Table<jest_serwisowany> jest_serwisowanies
		{
			get
			{
				return this.GetTable<jest_serwisowany>();
			}
		}
		
		public System.Data.Linq.Table<Klient> Klients
		{
			get
			{
				return this.GetTable<Klient>();
			}
		}
		
		public System.Data.Linq.Table<pilotuje> pilotujes
		{
			get
			{
				return this.GetTable<pilotuje>();
			}
		}
		
		public System.Data.Linq.Table<Pracownik> Pracowniks
		{
			get
			{
				return this.GetTable<Pracownik>();
			}
		}
		
		public System.Data.Linq.Table<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this.GetTable<Rezerwacja>();
			}
		}
		
		public System.Data.Linq.Table<Statek> Stateks
		{
			get
			{
				return this.GetTable<Statek>();
			}
		}
		
		public System.Data.Linq.Table<Status_części> Status_częścis
		{
			get
			{
				return this.GetTable<Status_części>();
			}
		}
		
		public System.Data.Linq.Table<Typ_statku> Typ_statkus
		{
			get
			{
				return this.GetTable<Typ_statku>();
			}
		}
		
		public System.Data.Linq.Table<Zamówienie> Zamówienies
		{
			get
			{
				return this.GetTable<Zamówienie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Część")]
	public partial class Część : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nazwa;
		
		private System.Nullable<float> _Cena;
		
		private decimal _Status_części_Status_części_ID;
		
		private System.Nullable<decimal> _Statek_Statek_ID;
		
		private decimal _Zamówienie_Zamówienie_ID;
		
		private decimal _Część_ID;
		
		private EntityRef<Statek> _Statek;
		
		private EntityRef<Status_części> _Status_części;
		
		private EntityRef<Zamówienie> _Zamówienie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnCenaChanging(System.Nullable<float> value);
    partial void OnCenaChanged();
    partial void OnStatus_części_Status_części_IDChanging(decimal value);
    partial void OnStatus_części_Status_części_IDChanged();
    partial void OnStatek_Statek_IDChanging(System.Nullable<decimal> value);
    partial void OnStatek_Statek_IDChanged();
    partial void OnZamówienie_Zamówienie_IDChanging(decimal value);
    partial void OnZamówienie_Zamówienie_IDChanged();
    partial void OnCzęść_IDChanging(decimal value);
    partial void OnCzęść_IDChanged();
    #endregion
		
		public Część()
		{
			this._Statek = default(EntityRef<Statek>);
			this._Status_części = default(EntityRef<Status_części>);
			this._Zamówienie = default(EntityRef<Zamówienie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Real")]
		public System.Nullable<float> Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_części_Status_części_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Status_części_Status_części_ID
		{
			get
			{
				return this._Status_części_Status_części_ID;
			}
			set
			{
				if ((this._Status_części_Status_części_ID != value))
				{
					if (this._Status_części.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_części_Status_części_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_części_Status_części_ID = value;
					this.SendPropertyChanged("Status_części_Status_części_ID");
					this.OnStatus_części_Status_części_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statek_Statek_ID", DbType="Decimal(28,0)")]
		public System.Nullable<decimal> Statek_Statek_ID
		{
			get
			{
				return this._Statek_Statek_ID;
			}
			set
			{
				if ((this._Statek_Statek_ID != value))
				{
					if (this._Statek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatek_Statek_IDChanging(value);
					this.SendPropertyChanging();
					this._Statek_Statek_ID = value;
					this.SendPropertyChanged("Statek_Statek_ID");
					this.OnStatek_Statek_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zamówienie_Zamówienie_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Zamówienie_Zamówienie_ID
		{
			get
			{
				return this._Zamówienie_Zamówienie_ID;
			}
			set
			{
				if ((this._Zamówienie_Zamówienie_ID != value))
				{
					if (this._Zamówienie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZamówienie_Zamówienie_IDChanging(value);
					this.SendPropertyChanging();
					this._Zamówienie_Zamówienie_ID = value;
					this.SendPropertyChanged("Zamówienie_Zamówienie_ID");
					this.OnZamówienie_Zamówienie_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Część_ID", DbType="Decimal(28,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Część_ID
		{
			get
			{
				return this._Część_ID;
			}
			set
			{
				if ((this._Część_ID != value))
				{
					this.OnCzęść_IDChanging(value);
					this.SendPropertyChanging();
					this._Część_ID = value;
					this.SendPropertyChanged("Część_ID");
					this.OnCzęść_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_Część", Storage="_Statek", ThisKey="Statek_Statek_ID", OtherKey="Statek_ID", IsForeignKey=true)]
		public Statek Statek
		{
			get
			{
				return this._Statek.Entity;
			}
			set
			{
				Statek previousValue = this._Statek.Entity;
				if (((previousValue != value) 
							|| (this._Statek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Statek.Entity = null;
						previousValue.Częśćs.Remove(this);
					}
					this._Statek.Entity = value;
					if ((value != null))
					{
						value.Częśćs.Add(this);
						this._Statek_Statek_ID = value.Statek_ID;
					}
					else
					{
						this._Statek_Statek_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Statek");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_części_Część", Storage="_Status_części", ThisKey="Status_części_Status_części_ID", OtherKey="Status_części_ID", IsForeignKey=true)]
		public Status_części Status_części
		{
			get
			{
				return this._Status_części.Entity;
			}
			set
			{
				Status_części previousValue = this._Status_części.Entity;
				if (((previousValue != value) 
							|| (this._Status_części.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_części.Entity = null;
						previousValue.Częśćs.Remove(this);
					}
					this._Status_części.Entity = value;
					if ((value != null))
					{
						value.Częśćs.Add(this);
						this._Status_części_Status_części_ID = value.Status_części_ID;
					}
					else
					{
						this._Status_części_Status_części_ID = default(decimal);
					}
					this.SendPropertyChanged("Status_części");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zamówienie_Część", Storage="_Zamówienie", ThisKey="Zamówienie_Zamówienie_ID", OtherKey="Zamówienie_ID", IsForeignKey=true)]
		public Zamówienie Zamówienie
		{
			get
			{
				return this._Zamówienie.Entity;
			}
			set
			{
				Zamówienie previousValue = this._Zamówienie.Entity;
				if (((previousValue != value) 
							|| (this._Zamówienie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zamówienie.Entity = null;
						previousValue.Częśćs.Remove(this);
					}
					this._Zamówienie.Entity = value;
					if ((value != null))
					{
						value.Częśćs.Add(this);
						this._Zamówienie_Zamówienie_ID = value.Zamówienie_ID;
					}
					else
					{
						this._Zamówienie_Zamówienie_ID = default(decimal);
					}
					this.SendPropertyChanged("Zamówienie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funkcja")]
	public partial class Funkcja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nazwa_funkcji;
		
		private decimal _Funkcja_ID;
		
		private EntitySet<Pracownik> _Pracowniks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNazwa_funkcjiChanging(string value);
    partial void OnNazwa_funkcjiChanged();
    partial void OnFunkcja_IDChanging(decimal value);
    partial void OnFunkcja_IDChanged();
    #endregion
		
		public Funkcja()
		{
			this._Pracowniks = new EntitySet<Pracownik>(new Action<Pracownik>(this.attach_Pracowniks), new Action<Pracownik>(this.detach_Pracowniks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_funkcji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa_funkcji
		{
			get
			{
				return this._Nazwa_funkcji;
			}
			set
			{
				if ((this._Nazwa_funkcji != value))
				{
					this.OnNazwa_funkcjiChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_funkcji = value;
					this.SendPropertyChanged("Nazwa_funkcji");
					this.OnNazwa_funkcjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Funkcja_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Funkcja_ID
		{
			get
			{
				return this._Funkcja_ID;
			}
			set
			{
				if ((this._Funkcja_ID != value))
				{
					this.OnFunkcja_IDChanging(value);
					this.SendPropertyChanging();
					this._Funkcja_ID = value;
					this.SendPropertyChanged("Funkcja_ID");
					this.OnFunkcja_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funkcja_Pracownik", Storage="_Pracowniks", ThisKey="Funkcja_ID", OtherKey="Funkcja_Funkcja_ID")]
		public EntitySet<Pracownik> Pracowniks
		{
			get
			{
				return this._Pracowniks;
			}
			set
			{
				this._Pracowniks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pracowniks(Pracownik entity)
		{
			this.SendPropertyChanging();
			entity.Funkcja = this;
		}
		
		private void detach_Pracowniks(Pracownik entity)
		{
			this.SendPropertyChanging();
			entity.Funkcja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jest_serwisowany")]
	public partial class jest_serwisowany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Pracownik_Pracownik_ID;
		
		private decimal _Statek_Statek_ID;
		
		private EntityRef<Pracownik> _Pracownik;
		
		private EntityRef<Statek> _Statek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPracownik_Pracownik_IDChanging(decimal value);
    partial void OnPracownik_Pracownik_IDChanged();
    partial void OnStatek_Statek_IDChanging(decimal value);
    partial void OnStatek_Statek_IDChanged();
    #endregion
		
		public jest_serwisowany()
		{
			this._Pracownik = default(EntityRef<Pracownik>);
			this._Statek = default(EntityRef<Statek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pracownik_Pracownik_ID", DbType="Decimal(28,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Pracownik_Pracownik_ID
		{
			get
			{
				return this._Pracownik_Pracownik_ID;
			}
			set
			{
				if ((this._Pracownik_Pracownik_ID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownik_Pracownik_IDChanging(value);
					this.SendPropertyChanging();
					this._Pracownik_Pracownik_ID = value;
					this.SendPropertyChanged("Pracownik_Pracownik_ID");
					this.OnPracownik_Pracownik_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statek_Statek_ID", DbType="Decimal(28,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Statek_Statek_ID
		{
			get
			{
				return this._Statek_Statek_ID;
			}
			set
			{
				if ((this._Statek_Statek_ID != value))
				{
					if (this._Statek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatek_Statek_IDChanging(value);
					this.SendPropertyChanging();
					this._Statek_Statek_ID = value;
					this.SendPropertyChanged("Statek_Statek_ID");
					this.OnStatek_Statek_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_jest_serwisowany", Storage="_Pracownik", ThisKey="Pracownik_Pracownik_ID", OtherKey="Pracownik_ID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.jest_serwisowanies.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.jest_serwisowanies.Add(this);
						this._Pracownik_Pracownik_ID = value.Pracownik_ID;
					}
					else
					{
						this._Pracownik_Pracownik_ID = default(decimal);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_jest_serwisowany", Storage="_Statek", ThisKey="Statek_Statek_ID", OtherKey="Statek_ID", IsForeignKey=true)]
		public Statek Statek
		{
			get
			{
				return this._Statek.Entity;
			}
			set
			{
				Statek previousValue = this._Statek.Entity;
				if (((previousValue != value) 
							|| (this._Statek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Statek.Entity = null;
						previousValue.jest_serwisowanies.Remove(this);
					}
					this._Statek.Entity = value;
					if ((value != null))
					{
						value.jest_serwisowanies.Add(this);
						this._Statek_Statek_ID = value.Statek_ID;
					}
					else
					{
						this._Statek_Statek_ID = default(decimal);
					}
					this.SendPropertyChanged("Statek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient")]
	public partial class Klient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Imię;
		
		private string _Nazwisko;
		
		private string _Nr_dowodu;
		
		private decimal _Klient_ID;
		
		private EntitySet<Rezerwacja> _Rezerwacjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImięChanging(string value);
    partial void OnImięChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnNr_dowoduChanging(string value);
    partial void OnNr_dowoduChanged();
    partial void OnKlient_IDChanging(decimal value);
    partial void OnKlient_IDChanged();
    #endregion
		
		public Klient()
		{
			this._Rezerwacjas = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacjas), new Action<Rezerwacja>(this.detach_Rezerwacjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imię", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Imię
		{
			get
			{
				return this._Imię;
			}
			set
			{
				if ((this._Imię != value))
				{
					this.OnImięChanging(value);
					this.SendPropertyChanging();
					this._Imię = value;
					this.SendPropertyChanged("Imię");
					this.OnImięChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_dowodu", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nr_dowodu
		{
			get
			{
				return this._Nr_dowodu;
			}
			set
			{
				if ((this._Nr_dowodu != value))
				{
					this.OnNr_dowoduChanging(value);
					this.SendPropertyChanging();
					this._Nr_dowodu = value;
					this.SendPropertyChanged("Nr_dowodu");
					this.OnNr_dowoduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klient_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Klient_ID
		{
			get
			{
				return this._Klient_ID;
			}
			set
			{
				if ((this._Klient_ID != value))
				{
					this.OnKlient_IDChanging(value);
					this.SendPropertyChanging();
					this._Klient_ID = value;
					this.SendPropertyChanged("Klient_ID");
					this.OnKlient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Rezerwacja", Storage="_Rezerwacjas", ThisKey="Klient_ID", OtherKey="Klient_Klient_ID")]
		public EntitySet<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this._Rezerwacjas;
			}
			set
			{
				this._Rezerwacjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pilotuje")]
	public partial class pilotuje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Pracownik_Pracownik_ID;
		
		private decimal _Rezerwacja_Rezerwacja_ID;
		
		private EntityRef<Pracownik> _Pracownik;
		
		private EntityRef<Rezerwacja> _Rezerwacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPracownik_Pracownik_IDChanging(decimal value);
    partial void OnPracownik_Pracownik_IDChanged();
    partial void OnRezerwacja_Rezerwacja_IDChanging(decimal value);
    partial void OnRezerwacja_Rezerwacja_IDChanged();
    #endregion
		
		public pilotuje()
		{
			this._Pracownik = default(EntityRef<Pracownik>);
			this._Rezerwacja = default(EntityRef<Rezerwacja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pracownik_Pracownik_ID", DbType="Decimal(28,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Pracownik_Pracownik_ID
		{
			get
			{
				return this._Pracownik_Pracownik_ID;
			}
			set
			{
				if ((this._Pracownik_Pracownik_ID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownik_Pracownik_IDChanging(value);
					this.SendPropertyChanging();
					this._Pracownik_Pracownik_ID = value;
					this.SendPropertyChanged("Pracownik_Pracownik_ID");
					this.OnPracownik_Pracownik_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rezerwacja_Rezerwacja_ID", DbType="Decimal(28,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Rezerwacja_Rezerwacja_ID
		{
			get
			{
				return this._Rezerwacja_Rezerwacja_ID;
			}
			set
			{
				if ((this._Rezerwacja_Rezerwacja_ID != value))
				{
					if (this._Rezerwacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRezerwacja_Rezerwacja_IDChanging(value);
					this.SendPropertyChanging();
					this._Rezerwacja_Rezerwacja_ID = value;
					this.SendPropertyChanged("Rezerwacja_Rezerwacja_ID");
					this.OnRezerwacja_Rezerwacja_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_pilotuje", Storage="_Pracownik", ThisKey="Pracownik_Pracownik_ID", OtherKey="Pracownik_ID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.pilotujes.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.pilotujes.Add(this);
						this._Pracownik_Pracownik_ID = value.Pracownik_ID;
					}
					else
					{
						this._Pracownik_Pracownik_ID = default(decimal);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezerwacja_pilotuje", Storage="_Rezerwacja", ThisKey="Rezerwacja_Rezerwacja_ID", OtherKey="Rezerwacja_ID", IsForeignKey=true)]
		public Rezerwacja Rezerwacja
		{
			get
			{
				return this._Rezerwacja.Entity;
			}
			set
			{
				Rezerwacja previousValue = this._Rezerwacja.Entity;
				if (((previousValue != value) 
							|| (this._Rezerwacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rezerwacja.Entity = null;
						previousValue.pilotujes.Remove(this);
					}
					this._Rezerwacja.Entity = value;
					if ((value != null))
					{
						value.pilotujes.Add(this);
						this._Rezerwacja_Rezerwacja_ID = value.Rezerwacja_ID;
					}
					else
					{
						this._Rezerwacja_Rezerwacja_ID = default(decimal);
					}
					this.SendPropertyChanged("Rezerwacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pracownik")]
	public partial class Pracownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Imię;
		
		private string _Nazwisko;
		
		private System.DateTime _Data_urodzenia;
		
		private string _Miejsce_urodzenia;
		
		private float _Pensja;
		
		private decimal _Pracownik_ID;
		
		private decimal _Funkcja_Funkcja_ID;
		
		private EntitySet<jest_serwisowany> _jest_serwisowanies;
		
		private EntitySet<pilotuje> _pilotujes;
		
		private EntityRef<Funkcja> _Funkcja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImięChanging(string value);
    partial void OnImięChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnData_urodzeniaChanging(System.DateTime value);
    partial void OnData_urodzeniaChanged();
    partial void OnMiejsce_urodzeniaChanging(string value);
    partial void OnMiejsce_urodzeniaChanged();
    partial void OnPensjaChanging(float value);
    partial void OnPensjaChanged();
    partial void OnPracownik_IDChanging(decimal value);
    partial void OnPracownik_IDChanged();
    partial void OnFunkcja_Funkcja_IDChanging(decimal value);
    partial void OnFunkcja_Funkcja_IDChanged();
    #endregion
		
		public Pracownik()
		{
			this._jest_serwisowanies = new EntitySet<jest_serwisowany>(new Action<jest_serwisowany>(this.attach_jest_serwisowanies), new Action<jest_serwisowany>(this.detach_jest_serwisowanies));
			this._pilotujes = new EntitySet<pilotuje>(new Action<pilotuje>(this.attach_pilotujes), new Action<pilotuje>(this.detach_pilotujes));
			this._Funkcja = default(EntityRef<Funkcja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imię", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Imię
		{
			get
			{
				return this._Imię;
			}
			set
			{
				if ((this._Imię != value))
				{
					this.OnImięChanging(value);
					this.SendPropertyChanging();
					this._Imię = value;
					this.SendPropertyChanged("Imię");
					this.OnImięChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_urodzenia", DbType="Date NOT NULL")]
		public System.DateTime Data_urodzenia
		{
			get
			{
				return this._Data_urodzenia;
			}
			set
			{
				if ((this._Data_urodzenia != value))
				{
					this.OnData_urodzeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_urodzenia = value;
					this.SendPropertyChanged("Data_urodzenia");
					this.OnData_urodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miejsce_urodzenia", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Miejsce_urodzenia
		{
			get
			{
				return this._Miejsce_urodzenia;
			}
			set
			{
				if ((this._Miejsce_urodzenia != value))
				{
					this.OnMiejsce_urodzeniaChanging(value);
					this.SendPropertyChanging();
					this._Miejsce_urodzenia = value;
					this.SendPropertyChanged("Miejsce_urodzenia");
					this.OnMiejsce_urodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pensja", DbType="Real NOT NULL")]
		public float Pensja
		{
			get
			{
				return this._Pensja;
			}
			set
			{
				if ((this._Pensja != value))
				{
					this.OnPensjaChanging(value);
					this.SendPropertyChanging();
					this._Pensja = value;
					this.SendPropertyChanged("Pensja");
					this.OnPensjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pracownik_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Pracownik_ID
		{
			get
			{
				return this._Pracownik_ID;
			}
			set
			{
				if ((this._Pracownik_ID != value))
				{
					this.OnPracownik_IDChanging(value);
					this.SendPropertyChanging();
					this._Pracownik_ID = value;
					this.SendPropertyChanged("Pracownik_ID");
					this.OnPracownik_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Funkcja_Funkcja_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Funkcja_Funkcja_ID
		{
			get
			{
				return this._Funkcja_Funkcja_ID;
			}
			set
			{
				if ((this._Funkcja_Funkcja_ID != value))
				{
					if (this._Funkcja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunkcja_Funkcja_IDChanging(value);
					this.SendPropertyChanging();
					this._Funkcja_Funkcja_ID = value;
					this.SendPropertyChanged("Funkcja_Funkcja_ID");
					this.OnFunkcja_Funkcja_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_jest_serwisowany", Storage="_jest_serwisowanies", ThisKey="Pracownik_ID", OtherKey="Pracownik_Pracownik_ID")]
		public EntitySet<jest_serwisowany> jest_serwisowanies
		{
			get
			{
				return this._jest_serwisowanies;
			}
			set
			{
				this._jest_serwisowanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_pilotuje", Storage="_pilotujes", ThisKey="Pracownik_ID", OtherKey="Pracownik_Pracownik_ID")]
		public EntitySet<pilotuje> pilotujes
		{
			get
			{
				return this._pilotujes;
			}
			set
			{
				this._pilotujes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funkcja_Pracownik", Storage="_Funkcja", ThisKey="Funkcja_Funkcja_ID", OtherKey="Funkcja_ID", IsForeignKey=true)]
		public Funkcja Funkcja
		{
			get
			{
				return this._Funkcja.Entity;
			}
			set
			{
				Funkcja previousValue = this._Funkcja.Entity;
				if (((previousValue != value) 
							|| (this._Funkcja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funkcja.Entity = null;
						previousValue.Pracowniks.Remove(this);
					}
					this._Funkcja.Entity = value;
					if ((value != null))
					{
						value.Pracowniks.Add(this);
						this._Funkcja_Funkcja_ID = value.Funkcja_ID;
					}
					else
					{
						this._Funkcja_Funkcja_ID = default(decimal);
					}
					this.SendPropertyChanged("Funkcja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jest_serwisowanies(jest_serwisowany entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_jest_serwisowanies(jest_serwisowany entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
		
		private void attach_pilotujes(pilotuje entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_pilotujes(pilotuje entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezerwacja")]
	public partial class Rezerwacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_wypożyczenia;
		
		private System.Nullable<System.DateTime> _Data_zwrotu;
		
		private decimal _Rezerwacja_ID;
		
		private decimal _Statek_Statek_ID;
		
		private decimal _Klient_Klient_ID;
		
		private EntitySet<pilotuje> _pilotujes;
		
		private EntityRef<Klient> _Klient;
		
		private EntityRef<Statek> _Statek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_wypożyczeniaChanging(System.DateTime value);
    partial void OnData_wypożyczeniaChanged();
    partial void OnData_zwrotuChanging(System.Nullable<System.DateTime> value);
    partial void OnData_zwrotuChanged();
    partial void OnRezerwacja_IDChanging(decimal value);
    partial void OnRezerwacja_IDChanged();
    partial void OnStatek_Statek_IDChanging(decimal value);
    partial void OnStatek_Statek_IDChanged();
    partial void OnKlient_Klient_IDChanging(decimal value);
    partial void OnKlient_Klient_IDChanged();
    #endregion
		
		public Rezerwacja()
		{
			this._pilotujes = new EntitySet<pilotuje>(new Action<pilotuje>(this.attach_pilotujes), new Action<pilotuje>(this.detach_pilotujes));
			this._Klient = default(EntityRef<Klient>);
			this._Statek = default(EntityRef<Statek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_wypożyczenia", DbType="Date NOT NULL")]
		public System.DateTime Data_wypożyczenia
		{
			get
			{
				return this._Data_wypożyczenia;
			}
			set
			{
				if ((this._Data_wypożyczenia != value))
				{
					this.OnData_wypożyczeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_wypożyczenia = value;
					this.SendPropertyChanged("Data_wypożyczenia");
					this.OnData_wypożyczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_zwrotu", DbType="Date")]
		public System.Nullable<System.DateTime> Data_zwrotu
		{
			get
			{
				return this._Data_zwrotu;
			}
			set
			{
				if ((this._Data_zwrotu != value))
				{
					this.OnData_zwrotuChanging(value);
					this.SendPropertyChanging();
					this._Data_zwrotu = value;
					this.SendPropertyChanged("Data_zwrotu");
					this.OnData_zwrotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rezerwacja_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Rezerwacja_ID
		{
			get
			{
				return this._Rezerwacja_ID;
			}
			set
			{
				if ((this._Rezerwacja_ID != value))
				{
					this.OnRezerwacja_IDChanging(value);
					this.SendPropertyChanging();
					this._Rezerwacja_ID = value;
					this.SendPropertyChanged("Rezerwacja_ID");
					this.OnRezerwacja_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statek_Statek_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Statek_Statek_ID
		{
			get
			{
				return this._Statek_Statek_ID;
			}
			set
			{
				if ((this._Statek_Statek_ID != value))
				{
					if (this._Statek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatek_Statek_IDChanging(value);
					this.SendPropertyChanging();
					this._Statek_Statek_ID = value;
					this.SendPropertyChanged("Statek_Statek_ID");
					this.OnStatek_Statek_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klient_Klient_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Klient_Klient_ID
		{
			get
			{
				return this._Klient_Klient_ID;
			}
			set
			{
				if ((this._Klient_Klient_ID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlient_Klient_IDChanging(value);
					this.SendPropertyChanging();
					this._Klient_Klient_ID = value;
					this.SendPropertyChanged("Klient_Klient_ID");
					this.OnKlient_Klient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezerwacja_pilotuje", Storage="_pilotujes", ThisKey="Rezerwacja_ID", OtherKey="Rezerwacja_Rezerwacja_ID")]
		public EntitySet<pilotuje> pilotujes
		{
			get
			{
				return this._pilotujes;
			}
			set
			{
				this._pilotujes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Rezerwacja", Storage="_Klient", ThisKey="Klient_Klient_ID", OtherKey="Klient_ID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Rezerwacjas.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Rezerwacjas.Add(this);
						this._Klient_Klient_ID = value.Klient_ID;
					}
					else
					{
						this._Klient_Klient_ID = default(decimal);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_Rezerwacja", Storage="_Statek", ThisKey="Statek_Statek_ID", OtherKey="Statek_ID", IsForeignKey=true)]
		public Statek Statek
		{
			get
			{
				return this._Statek.Entity;
			}
			set
			{
				Statek previousValue = this._Statek.Entity;
				if (((previousValue != value) 
							|| (this._Statek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Statek.Entity = null;
						previousValue.Rezerwacjas.Remove(this);
					}
					this._Statek.Entity = value;
					if ((value != null))
					{
						value.Rezerwacjas.Add(this);
						this._Statek_Statek_ID = value.Statek_ID;
					}
					else
					{
						this._Statek_Statek_ID = default(decimal);
					}
					this.SendPropertyChanged("Statek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pilotujes(pilotuje entity)
		{
			this.SendPropertyChanging();
			entity.Rezerwacja = this;
		}
		
		private void detach_pilotujes(pilotuje entity)
		{
			this.SendPropertyChanging();
			entity.Rezerwacja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statek")]
	public partial class Statek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Silnik;
		
		private int _Rok_produkcji;
		
		private float _Cena_za_dobę;
		
		private decimal _Statek_ID;
		
		private decimal _Typ_statku_Typ_statku_ID;
		
		private EntitySet<Część> _Częśćs;
		
		private EntitySet<jest_serwisowany> _jest_serwisowanies;
		
		private EntitySet<Rezerwacja> _Rezerwacjas;
		
		private EntityRef<Typ_statku> _Typ_statku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSilnikChanging(string value);
    partial void OnSilnikChanged();
    partial void OnRok_produkcjiChanging(int value);
    partial void OnRok_produkcjiChanged();
    partial void OnCena_za_dobęChanging(float value);
    partial void OnCena_za_dobęChanged();
    partial void OnStatek_IDChanging(decimal value);
    partial void OnStatek_IDChanged();
    partial void OnTyp_statku_Typ_statku_IDChanging(decimal value);
    partial void OnTyp_statku_Typ_statku_IDChanged();
    #endregion
		
		public Statek()
		{
			this._Częśćs = new EntitySet<Część>(new Action<Część>(this.attach_Częśćs), new Action<Część>(this.detach_Częśćs));
			this._jest_serwisowanies = new EntitySet<jest_serwisowany>(new Action<jest_serwisowany>(this.attach_jest_serwisowanies), new Action<jest_serwisowany>(this.detach_jest_serwisowanies));
			this._Rezerwacjas = new EntitySet<Rezerwacja>(new Action<Rezerwacja>(this.attach_Rezerwacjas), new Action<Rezerwacja>(this.detach_Rezerwacjas));
			this._Typ_statku = default(EntityRef<Typ_statku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silnik", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Silnik
		{
			get
			{
				return this._Silnik;
			}
			set
			{
				if ((this._Silnik != value))
				{
					this.OnSilnikChanging(value);
					this.SendPropertyChanging();
					this._Silnik = value;
					this.SendPropertyChanged("Silnik");
					this.OnSilnikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rok_produkcji", DbType="Int NOT NULL")]
		public int Rok_produkcji
		{
			get
			{
				return this._Rok_produkcji;
			}
			set
			{
				if ((this._Rok_produkcji != value))
				{
					this.OnRok_produkcjiChanging(value);
					this.SendPropertyChanging();
					this._Rok_produkcji = value;
					this.SendPropertyChanged("Rok_produkcji");
					this.OnRok_produkcjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena_za_dobę", DbType="Real NOT NULL")]
		public float Cena_za_dobę
		{
			get
			{
				return this._Cena_za_dobę;
			}
			set
			{
				if ((this._Cena_za_dobę != value))
				{
					this.OnCena_za_dobęChanging(value);
					this.SendPropertyChanging();
					this._Cena_za_dobę = value;
					this.SendPropertyChanged("Cena_za_dobę");
					this.OnCena_za_dobęChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statek_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Statek_ID
		{
			get
			{
				return this._Statek_ID;
			}
			set
			{
				if ((this._Statek_ID != value))
				{
					this.OnStatek_IDChanging(value);
					this.SendPropertyChanging();
					this._Statek_ID = value;
					this.SendPropertyChanged("Statek_ID");
					this.OnStatek_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ_statku_Typ_statku_ID", DbType="Decimal(28,0) NOT NULL")]
		public decimal Typ_statku_Typ_statku_ID
		{
			get
			{
				return this._Typ_statku_Typ_statku_ID;
			}
			set
			{
				if ((this._Typ_statku_Typ_statku_ID != value))
				{
					if (this._Typ_statku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTyp_statku_Typ_statku_IDChanging(value);
					this.SendPropertyChanging();
					this._Typ_statku_Typ_statku_ID = value;
					this.SendPropertyChanged("Typ_statku_Typ_statku_ID");
					this.OnTyp_statku_Typ_statku_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_Część", Storage="_Częśćs", ThisKey="Statek_ID", OtherKey="Statek_Statek_ID")]
		public EntitySet<Część> Częśćs
		{
			get
			{
				return this._Częśćs;
			}
			set
			{
				this._Częśćs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_jest_serwisowany", Storage="_jest_serwisowanies", ThisKey="Statek_ID", OtherKey="Statek_Statek_ID")]
		public EntitySet<jest_serwisowany> jest_serwisowanies
		{
			get
			{
				return this._jest_serwisowanies;
			}
			set
			{
				this._jest_serwisowanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statek_Rezerwacja", Storage="_Rezerwacjas", ThisKey="Statek_ID", OtherKey="Statek_Statek_ID")]
		public EntitySet<Rezerwacja> Rezerwacjas
		{
			get
			{
				return this._Rezerwacjas;
			}
			set
			{
				this._Rezerwacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_statku_Statek", Storage="_Typ_statku", ThisKey="Typ_statku_Typ_statku_ID", OtherKey="Typ_statku_ID", IsForeignKey=true)]
		public Typ_statku Typ_statku
		{
			get
			{
				return this._Typ_statku.Entity;
			}
			set
			{
				Typ_statku previousValue = this._Typ_statku.Entity;
				if (((previousValue != value) 
							|| (this._Typ_statku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_statku.Entity = null;
						previousValue.Stateks.Remove(this);
					}
					this._Typ_statku.Entity = value;
					if ((value != null))
					{
						value.Stateks.Add(this);
						this._Typ_statku_Typ_statku_ID = value.Typ_statku_ID;
					}
					else
					{
						this._Typ_statku_Typ_statku_ID = default(decimal);
					}
					this.SendPropertyChanged("Typ_statku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Statek = this;
		}
		
		private void detach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Statek = null;
		}
		
		private void attach_jest_serwisowanies(jest_serwisowany entity)
		{
			this.SendPropertyChanging();
			entity.Statek = this;
		}
		
		private void detach_jest_serwisowanies(jest_serwisowany entity)
		{
			this.SendPropertyChanging();
			entity.Statek = null;
		}
		
		private void attach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Statek = this;
		}
		
		private void detach_Rezerwacjas(Rezerwacja entity)
		{
			this.SendPropertyChanging();
			entity.Statek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status_części")]
	public partial class Status_części : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Status;
		
		private decimal _Status_części_ID;
		
		private EntitySet<Część> _Częśćs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStatus_części_IDChanging(decimal value);
    partial void OnStatus_części_IDChanged();
    #endregion
		
		public Status_części()
		{
			this._Częśćs = new EntitySet<Część>(new Action<Część>(this.attach_Częśćs), new Action<Część>(this.detach_Częśćs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_części_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Status_części_ID
		{
			get
			{
				return this._Status_części_ID;
			}
			set
			{
				if ((this._Status_części_ID != value))
				{
					this.OnStatus_części_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_części_ID = value;
					this.SendPropertyChanged("Status_części_ID");
					this.OnStatus_części_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_części_Część", Storage="_Częśćs", ThisKey="Status_części_ID", OtherKey="Status_części_Status_części_ID")]
		public EntitySet<Część> Częśćs
		{
			get
			{
				return this._Częśćs;
			}
			set
			{
				this._Częśćs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Status_części = this;
		}
		
		private void detach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Status_części = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Typ_statku")]
	public partial class Typ_statku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nazwa_typu;
		
		private decimal _Typ_statku_ID;
		
		private EntitySet<Statek> _Stateks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNazwa_typuChanging(string value);
    partial void OnNazwa_typuChanged();
    partial void OnTyp_statku_IDChanging(decimal value);
    partial void OnTyp_statku_IDChanged();
    #endregion
		
		public Typ_statku()
		{
			this._Stateks = new EntitySet<Statek>(new Action<Statek>(this.attach_Stateks), new Action<Statek>(this.detach_Stateks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_typu", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nazwa_typu
		{
			get
			{
				return this._Nazwa_typu;
			}
			set
			{
				if ((this._Nazwa_typu != value))
				{
					this.OnNazwa_typuChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_typu = value;
					this.SendPropertyChanged("Nazwa_typu");
					this.OnNazwa_typuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ_statku_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Typ_statku_ID
		{
			get
			{
				return this._Typ_statku_ID;
			}
			set
			{
				if ((this._Typ_statku_ID != value))
				{
					this.OnTyp_statku_IDChanging(value);
					this.SendPropertyChanging();
					this._Typ_statku_ID = value;
					this.SendPropertyChanged("Typ_statku_ID");
					this.OnTyp_statku_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_statku_Statek", Storage="_Stateks", ThisKey="Typ_statku_ID", OtherKey="Typ_statku_Typ_statku_ID")]
		public EntitySet<Statek> Stateks
		{
			get
			{
				return this._Stateks;
			}
			set
			{
				this._Stateks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stateks(Statek entity)
		{
			this.SendPropertyChanging();
			entity.Typ_statku = this;
		}
		
		private void detach_Stateks(Statek entity)
		{
			this.SendPropertyChanging();
			entity.Typ_statku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zamówienie")]
	public partial class Zamówienie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_zamówienia;
		
		private System.Nullable<System.DateTime> _Data_odbioru;
		
		private decimal _Zamówienie_ID;
		
		private EntitySet<Część> _Częśćs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_zamówieniaChanging(System.DateTime value);
    partial void OnData_zamówieniaChanged();
    partial void OnData_odbioruChanging(System.Nullable<System.DateTime> value);
    partial void OnData_odbioruChanged();
    partial void OnZamówienie_IDChanging(decimal value);
    partial void OnZamówienie_IDChanged();
    #endregion
		
		public Zamówienie()
		{
			this._Częśćs = new EntitySet<Część>(new Action<Część>(this.attach_Częśćs), new Action<Część>(this.detach_Częśćs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_zamówienia", DbType="Date NOT NULL")]
		public System.DateTime Data_zamówienia
		{
			get
			{
				return this._Data_zamówienia;
			}
			set
			{
				if ((this._Data_zamówienia != value))
				{
					this.OnData_zamówieniaChanging(value);
					this.SendPropertyChanging();
					this._Data_zamówienia = value;
					this.SendPropertyChanged("Data_zamówienia");
					this.OnData_zamówieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_odbioru", DbType="Date")]
		public System.Nullable<System.DateTime> Data_odbioru
		{
			get
			{
				return this._Data_odbioru;
			}
			set
			{
				if ((this._Data_odbioru != value))
				{
					this.OnData_odbioruChanging(value);
					this.SendPropertyChanging();
					this._Data_odbioru = value;
					this.SendPropertyChanged("Data_odbioru");
					this.OnData_odbioruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zamówienie_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(28,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Zamówienie_ID
		{
			get
			{
				return this._Zamówienie_ID;
			}
			set
			{
				if ((this._Zamówienie_ID != value))
				{
					this.OnZamówienie_IDChanging(value);
					this.SendPropertyChanging();
					this._Zamówienie_ID = value;
					this.SendPropertyChanged("Zamówienie_ID");
					this.OnZamówienie_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zamówienie_Część", Storage="_Częśćs", ThisKey="Zamówienie_ID", OtherKey="Zamówienie_Zamówienie_ID")]
		public EntitySet<Część> Częśćs
		{
			get
			{
				return this._Częśćs;
			}
			set
			{
				this._Częśćs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Zamówienie = this;
		}
		
		private void detach_Częśćs(Część entity)
		{
			this.SendPropertyChanging();
			entity.Zamówienie = null;
		}
	}
}
#pragma warning restore 1591
